node{

def mavenHome = tool name: "maven3.8.5"
properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([pollSCM('* * * * *')])])

echo "Job name: ${env.JOB_NAME}"
echo "Bulid no: ${env.BUILD_NUMBER}"
echo "Node name: ${env. NODE_NAME}"
try{
Sendslacknotifications("STARTED")
stage ('checkoutcode')
{
git branch: 'development', credentialsId: '073ab41c-a1a1-4445-a9fa-901dfa559ab1', url: 'https://github.com/kbmdevops/maven-web-application.git'
}
stage ('bulid')
{
sh "${mavenHome}/bin/mvn clean package"
}
stage ('Excute sonarReport'){
sh "${mavenHome}/bin/mvn clean sonar:sonar"
}
stage ('uploadarticattonexus'){
sh "${mavenHome}/bin/mvn deploy"
}
stage ('deployaplication to tomcat'){
sshagent(['ae245a06-19a9-4924-b233-233531239606']) {
sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.15.251:/opt/apache-tomcat-9.0.68/webapps/"
}
}

}//try closeing

catch(e){
currentBuild.result = "FAILURE"
}//catch block closeing
finally{
Sendslacknotification(currentBuild.result)
}//finallay block closeing

}//Node closeing

def notifyBuild(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary, channel: "#flipcart")
}

  
